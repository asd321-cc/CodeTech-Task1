<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Blog Website</title>
    <style>
    body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #addbd6;
}

header {
    background-color: #0da18f;
    color: white;
    padding: 10px 0;
    text-align: center;
}

header h1 {
    margin: 0;
}

main {
    display: flex;
    justify-content: center;
    padding: 20px;
}

.container {
    max-width: 1200px;
    width: 100%;
}

.blog-post {
    background-color: white;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.comment-section {
    margin-top: 20px;
}

.comment {
    background-color: #f9f9f9;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 3px;
}


@media (max-width: 768px) {
    .container {
        padding: 10px;
    }
}

    </style>
</head>

<body>


    <header>
        <h1>Adhyatm's Blog Website</h1>
    </header>


    <main>
        <div class="container">
   
            <div id="blogPosts" class="blog-post"></div>

            
            <form id="blogForm">
                <h2>Create New Blog Post</h2>
                <label for="title">Title:</label><br>
                <input type="text" id="title" name="title" required><br><br>

                <label for="content">Content:</label><br>
                <textarea id="content" name="content" rows="5" required></textarea><br><br>

                <button type="submit">Create Post</button>
            </form>
        </div>
    </main>
    <script>
      const currentUser = {
    id: 1,
    name: "User1"
};


let blogPosts = [{
    id: 1,
    title: "Travelling",
    content: "Travel is the movement of people between distant geographical locations. Travel can be done by foot, bicycle, automobile, train, boat, bus, airplane, ship or other means, with or without luggage, and can be one way or round trip.Travel can also include relatively short stays between successive movements, as in the case of tourism.",
    author: "Adii",
    comments: []
}, ];


function renderPosts() {
    const blogPostsDiv = document.getElementById("blogPosts");
    blogPostsDiv.innerHTML = "";

    blogPosts.forEach(post => {
        const postDiv = document.createElement("div");
        postDiv.classList.add("blog-post");
        postDiv.innerHTML = `
                    <h2>${post.title}</h2>
                    <p>${post.content}</p>
                    <p><strong>Author:</strong> ${post.author}</p>
                    <button onclick="editPost(${post.id})">Edit</button>
                    <button onclick="deletePost(${post.id})">Delete</button>

                    <div class="comment-section">
                        <h3>Comments</h3>
                        <div id="comments-${post.id}">
                            ${post.comments.map(comment => `<div class="comment">${comment}</div>`).join("")}
                        </div>
                        <input type="text" id="commentInput-${post.id}" placeholder="Add a comment" />
                        <button onclick="addComment(${post.id})">Add Comment</button>
                    </div>
                `;
        blogPostsDiv.appendChild(postDiv);
    });
}


document.getElementById("blogForm").addEventListener("submit", function(e) {
    e.preventDefault();
    const title = document.getElementById("title").value;
    const content = document.getElementById("content").value;

    const newPost = {
        id: blogPosts.length + 1,
        title,
        content,
        author: currentUser.name,
        comments: []
    };

    blogPosts.push(newPost);
    renderPosts();


    document.getElementById("blogForm").reset();
});


function editPost(postId) {
    const post = blogPosts.find(p => p.id === postId);
    const newTitle = prompt("Edit title:", post.title);
    const newContent = prompt("Edit content:", post.content);

    if (newTitle && newContent) {
        post.title = newTitle;
        post.content = newContent;
        renderPosts();
    }
}


function deletePost(postId) {
    blogPosts = blogPosts.filter(p => p.id !== postId);
    renderPosts();
}


function addComment(postId) {
    const commentInput = document.getElementById(`commentInput-${postId}`);
    const comment = commentInput.value;

    if (comment) {
        const post = blogPosts.find(p => p.id === postId);
        post.comments.push(comment);
        renderPosts();
    }
}


renderPosts();
    </script>



</body>

</html>
